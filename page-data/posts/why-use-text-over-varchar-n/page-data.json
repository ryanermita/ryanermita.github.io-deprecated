{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/why-use-text-over-varchar-n","result":{"data":{"markdownRemark":{"id":"b6ce3e8e-64d3-5437-8538-8ebfdaa41c84","html":"<p>I got an error earlier regarding exceeding the character length limit in a <code class=\"language-text\">varchar(n)</code> column. This issue raised some questions; should we just increased the number of character limit for the <code class=\"language-text\">varchar(n)</code> or convert the column type to <code class=\"language-text\">text</code>? When should we use <code class=\"language-text\">varchar(n)</code> over <code class=\"language-text\">text</code> and vice-versa?</p>\n<p>based on this <a href=\"https://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">article</a>, <code class=\"language-text\">varchar(n)</code> and <code class=\"language-text\">text</code> are saved in the same structure underneath, which is <code class=\"language-text\">varlena</code>, a <code class=\"language-text\">C</code> data structure. The difference is that <code class=\"language-text\">varchar(n)</code> has a built-in character length limit which is <code class=\"language-text\">n</code> . Also, based on the article, changing the <code class=\"language-text\">n</code> in a <code class=\"language-text\">varchar(n)</code> column in a live environment is very painful because it will cause DB locks that will result to system downtime. Using <code class=\"language-text\">text</code> is preferred as it has unlimited character length and if we need to add character length limit restriction it can be done by DB functions and changing those DB functions wont cause DB locks and system downtime. It that sense <code class=\"language-text\">text</code> is more manageable and flexible.</p>\n<p>In my case, changing my column type to <code class=\"language-text\">text</code> is the more applicable solution as I don’t know how much data my column will hold. I should’ve thought of this before I built my DB tables. Well, we’re not perfect and we’ll learn/relearn better practices because of this kind of mistakes.</p>\n<p>I’m grateful to one of our DevOps who give me this <a href=\"https://www.depesz.com/2010/03/02/charx-vs-varcharx-vs-varchar-vs-text/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">article</a>: <em>thumbsup</em></p>","fields":{"slug":"/posts/why-use-text-over-varchar-n","tagSlugs":["/tag/databases/"]},"frontmatter":{"date":"2020-04-13","description":"I encountered an issue with VARCHAR(n) regarding the character limit and this experience makes me think of the best way to solved it. It can be easily solved by increasing the N on the VARCHAR(N) field, but I went to another route by changing the field from VARCHAR(n) to TEXT. This article will explain the rationale behind that solution.","tags":["databases"],"title":"Why use TEXT over VARCHAR(n)","socialImage":null}}},"pageContext":{"slug":"/posts/why-use-text-over-varchar-n"}},"staticQueryHashes":["251939775","3872291177","401334301"]}