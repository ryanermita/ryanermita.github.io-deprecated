{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/unittest","result":{"data":{"site":{"siteMetadata":{"title":"Ryan Ermita","subtitle":"Human | Software Engineer"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/python-mock-and-magicmock","categorySlug":"/category/software-engineering/"},"frontmatter":{"title":"Python Mock and MagicMock","date":"2019-02-04","category":"Software Engineering","description":"While I’m looking for a way to test my Python function that has a pymysql query, I stumble upon a code snippet with mock.MagicMock(). This pique my curiosity how it differs with mock.Mock() in Python. This article will discuss the difference between the two and when to use one over the other."}}},{"node":{"fields":{"slug":"/posts/python-autospeccing","categorySlug":"/category/software-engineering/"},"frontmatter":{"title":"Python Autospeccing","date":"2019-02-03","category":"Software Engineering","description":"While I’m looking for a way to test my function that has a pymysql query, I stumble upon a code snippet with @mock.patch('simple.pymysql', autospec=True). So I took my time to know how this stuff works. Apparently Python has a very good documentation about it. This article summarizes what I understand about Python Autospec."}}},{"node":{"fields":{"slug":"/posts/unit-testing-with-python-unittest-module","categorySlug":"/category/software-engineering/"},"frontmatter":{"title":"Unit Testing with Python unittest module","date":"2018-09-20","category":"Software Engineering","description":"A well-designed software is build and designed with quality in mind and it doesn’t easily break with small code changes. We can ensure that our code still works regardless of code changes if we’re doing tests. That’s why doing tests is very important part of building a well-designed application because it ensures quality. Aside from software quality this arcticle will discuss other reasons why writing tests on your software is necessary. Also, this article will have a walk-through on how to write unit tests in Python using unittest module."}}}]}},"pageContext":{"tag":"unittest","currentPage":0,"postsLimit":4,"postsOffset":0,"prevPagePath":"/tag/unittest","nextPagePath":"/tag/unittest/page/1","hasPrevPage":false,"hasNextPage":false}},"staticQueryHashes":["251939775","3872291177","401334301"]}